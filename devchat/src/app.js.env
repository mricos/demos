// Get DOM elements
const chatForm = document.getElementById("chat-form");
const userInput = document.getElementById("user-input");
const chatMessages = document.getElementById("chat-messages");
const apiToggle = document.getElementById("toggle-api-response");

apiToggle.addEventListener('click', function(e) {
    e.preventDefault();
    const apiResponseContainer =
      document.getElementById('api-response-container');

    if (apiResponseContainer.style.display === 'none') {
        apiResponseContainer.style.display = 'block';
        e.target.innerHTML = "Hide API Response &#x25B2;";
    } else {
        apiResponseContainer.style.display = 'none';
        e.target.innerHTML = "API Response &#x25BC;";
    }
});

// Add event listener to the form
chatForm.addEventListener("submit", (e) => {
    e.preventDefault();

    const message = userInput.value.trim();

    if (message) {
        displayMessage(message, "user");
        getResponse(message);
    }

    userInput.value = "";
});


async function getResponse(message) {
    const apiKey ="$OPENAI_API_KEY";      // client has to have this so envsubst app.js.env > app.js

    const host="https://api.openai.com/v1/engines/";
    const engine="text-davinci-002/completions";
    try {
        const response = await fetch(host+engine, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${apiKey}`,
            },
            body: JSON.stringify({
                prompt: `User: ${message}\nAI:`,
                max_tokens: ${MAX_TOKENS},
                n: 1,
                stop: null,
                temperature: 0.8,
            }),
        });

        if (response.ok) {
            const apiResponse = await response.json();
            let chatGptResponse = apiResponse.choices[0].text.trim();
            let usage = apiResponse.usage;
            displayMessage(chatGptResponse, "ai", apiResponse);
        } else {
            console.error("Error:", response.status, response.statusText);
            const errorText = await response.text();
            displayMessage(
              `An error occurred (${response.status}): ${errorText}`,
              "ai", null);
        }
    } catch (error) {
        console.error("Error:", error);
        displayMessage(`An error occurred: ${error.message}`, "ai", null);
    }
}

function displayMessage(message, sender, apiResponse) {
    const messageDiv = document.createElement("div");
    messageDiv.className = `${sender}-message`;
    messageDiv.textContent = message;

    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;

    const apiResponseContainer =
      document.getElementById("api-response-container");

    apiResponseContainer.textContent = 
      apiResponse ? JSON.stringify(apiResponse, null, 2) : '';
}


