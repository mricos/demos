<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1100 750" preserveAspectRatio="xMidYMid meet" style="font-family:Arial,sans-serif;" onload="setupInteractivity()">
    <style>
        .popup { opacity: 0; pointer-events: none; transition: opacity 0.3s; }
        .popup.show { opacity: 1; }
        .pill { transition: opacity 0.3s; cursor: grab; }
        .pill.faded { opacity: 0.3; }
        .notes { display: none; font-size: 14px; fill: black; }
        .notes.show { display: block; }
    </style>
    <script>
        const PopupManager = (function () {
            const createPopup = (id, content, options = {}) => {
                const svg = document.querySelector('svg');
                const popup = document.createElementNS('http://www.w3.org/2000/svg', 'g');
                popup.setAttribute('id', id);
                popup.setAttribute('class', 'popup');
                const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
                rect.setAttribute('rx', options.rx || 10);
                rect.setAttribute('fill', options.fill || '#ffe6d5');
                rect.setAttribute('stroke', options.stroke || '#cc3300');
                rect.setAttribute('stroke-width', options.strokeWidth || 1);
                popup.appendChild(rect);
                const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');
                text.setAttribute('x', 5);
                text.setAttribute('y', 15);
                text.setAttribute('font-size', options.fontSize || '0.8em');
                text.setAttribute('fill', options.textColor || '#000');
                text.textContent = content;
                popup.appendChild(text);
                svg.appendChild(popup);
                updatePopupDimensions(popup);
            };
            const updatePopupDimensions = (popup) => {
                const text = popup.querySelector('text');
                const rect = popup.querySelector('rect');
                const bbox = text.getBBox();
                rect.setAttribute('width', bbox.width + 10);
                rect.setAttribute('height', bbox.height + 10);
                rect.setAttribute('x', 0);
                rect.setAttribute('y', 0);
            };
            const showPopup = (id, x, y) => {
                const popup = document.getElementById(id);
                popup.style.display = 'block';
                const rect = popup.querySelector('rect');
                const popupWidth = parseFloat(rect.getAttribute('width'));
                const popupHeight = parseFloat(rect.getAttribute('height'));
                const boundedX = Math.max(10, Math.min(x - popupWidth / 2, 1100 - popupWidth - 10));
                const boundedY = Math.max(10, Math.min(y - popupHeight - 10, 700 - popupHeight - 10));
                popup.setAttribute('transform', `translate(${boundedX}, ${boundedY})`);
                popup.classList.add('show');
            };
            const hidePopup = (id) => {
                const popup = document.getElementById(id);
                if (popup) {
                    popup.classList.remove('show');
                    popup.style.display = 'none';
                }
            };
            return { createPopup, showPopup, hidePopup };
        })();

        function setupInteractivity() {
            const pills = document.querySelectorAll('.pill');
            pills.forEach(pill => {
                const popupId = pill.dataset.popup;
                pill.addEventListener('mouseenter', (event) => {
                    const bbox = pill.getBoundingClientRect();
                    const svg = document.querySelector('svg');
                    const pt = svg.createSVGPoint();
                    pt.x = bbox.x + bbox.width / 2;
                    pt.y = bbox.y; // Adjust Y position
                    const svgPoint = pt.matrixTransform(svg.getScreenCTM().inverse());
                    PopupManager.showPopup(popupId, svgPoint.x, svgPoint.y);
                    fadeOthers(pill, true);
                });
                pill.addEventListener('mouseleave', () => {
                    PopupManager.hidePopup(popupId);
                    fadeOthers(pill, false);
                });
                pill.addEventListener('mousedown', () => {
                    pill.style.cursor = 'grabbing';
                    const movePill = (moveEvent) => {
                        pill.setAttribute('transform', `translate(${moveEvent.clientX - 50}, ${moveEvent.clientY - 20})`);
                    };
                    const releasePill = () => {
                        document.removeEventListener('mousemove', movePill);
                        document.removeEventListener('mouseup', releasePill);
                        pill.style.cursor = 'grab';
                    };
                    document.addEventListener('mousemove', movePill);
                    document.addEventListener('mouseup', releasePill);
                });
            });

            const posterior = document.querySelector('#posterior');
            posterior.addEventListener('click', () => {
                const notes = document.querySelector('.notes');
                notes.classList.toggle('show');
            });
        }

        function fadeOthers(target, fade) {
            document.querySelectorAll('.pill').forEach(pill => {
                if (pill !== target) {
                    pill.classList.toggle('faded', fade);
                }
            });
        }

        // Create popups
        PopupManager.createPopup('popup-likelihood', 'Likelihood: How well evidence matches the hypothesis.', { fill: '#ffe6d5', stroke: '#cc3300', });
        PopupManager.createPopup('popup-prior', 'Prior: Initial beliefs before evidence.', { fill: '#e6ffe6', stroke: '#006600', });
        PopupManager.createPopup('popup-evidence', 'Evidence: Normalizes probabilities.', { fill: '#fff0b3', stroke: '#b38f00', });
    </script>

    <!-- Title -->
    <text x="550" y="20" text-anchor="middle" font-size="24" font-weight="bold">Bayes' Rule Illustration</text>

    <!-- Midlines -->
    <line x1="550" y1="50" x2="550" y2="700" stroke="gray" stroke-width="0.5" stroke-dasharray="5,5" opacity="0.3" />
    <line x1="50" y1="300" x2="1050" y2="300" stroke="gray" stroke-width="0.5" stroke-dasharray="5,5" opacity="0.3" />

    <!-- Equal Sign -->
    <text x="550" y="290" text-anchor="middle" font-size="28" fill="black">=</text>
    
    <!-- Posterior -->
    <text id="posterior" x="400" y="290" text-anchor="middle" font-size="28" font-weight="bold" fill="#003366" style="cursor: pointer;">P(H | E)</text>
    <text x="400" y="320" text-anchor="middle" font-size="16" font-weight="bold" fill="#003366">Posterior</text>

    <!-- Likelihood -->
    <g class="pill" data-popup="popup-likelihood">
        <rect x="600" y="250" width="100" height="40" fill="#ffe6d5" stroke="#cc3300" stroke-width="2" rx="20"/>
        <text x="650" y="275" text-anchor="middle" font-size="18" fill="#cc3300">P(E | H)</text>
        <text x="650" y="230" text-anchor="middle" font-size="14" fill="#cc3300">Likelihood</text>
    </g>

    <!-- Prior -->
    <g class="pill" data-popup="popup-prior">
        <rect x="720" y="250" width="80" height="40" fill="#e6ffe6" stroke="#006600" stroke-width="2" rx="20" />
        <text x="760" y="275" text-anchor="middle" font-size="18" fill="#006600">P(H)</text>
        <text x="760" y="230" text-anchor="middle" font-size="14" fill="#006600">Prior</text>
    </g>

    <!-- Evidence -->
    <g class="pill" data-popup="popup-evidence">
        <rect x="650" y="310" width="100" height="40" fill="#fff0b3" stroke="#b38f00" stroke-width="2" rx="20" />
        <text x="700" y="335" text-anchor="middle" font-size="18" fill="#b38f00">P(E)</text>
        <text x="700" y="370" text-anchor="middle" font-size="14" fill="#b38f00">Evidence</text>
    </g>

    <!-- Notes Section -->
    <g class="notes" transform="translate(50, 500)">
        <text y="0">1. P(H | E): Posterior updates belief using evidence.</text>
        <text y="20">2. P(E | H): Likelihood measures evidence under hypothesis.</text>
        <text y="40">3. P(H): Prior reflects initial belief before evidence.</text>
        <text y="60">4. P(E): Evidence normalizes probabilities.</text>
    </g>

    <!-- Popups -->
    <g id="popup-likelihood" class="popup">
        <rect x="0" y="0" width="200" height="40" fill="#ffe6d5" stroke="#cc3300" stroke-width="1" rx="10" />
        <text x="100" y="25" text-anchor="middle" font-size="14" fill="#cc3300">Likelihood: How well evidence matches the hypothesis.</text>
    </g>
    
    <g id="popup-prior" class="popup">
        <rect x="0" y="0" width="200" height="40" fill="#e6ffe6" stroke="#006600" stroke-width="1" rx="10" />
        <text x="100" y="25" text-anchor="middle" font-size="14" fill="#006600">Prior: Initial beliefs before evidence.</text>
    </g>
    
    <g id="popup-evidence" class="popup">
        <rect x="0" y="0" width="200" height="40" fill="#fff0b3" stroke="#b38f00" stroke-width="1" rx="10" />
        <text x="100" y="25" text-anchor="middle" font-size="14" fill="#b38f00">Evidence: Normalizes probabilities.</text>
    </g>
</svg>
